name: Otus homework tests

on:
  push:
    branches:
      - hw*

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ~1.19

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download dependencies
        run: |
          go mod tidy
          go mod download
        working-directory: ${{ env.BRANCH }}

      - name: Compile the project
        run: go build ./...
        working-directory: ${{ env.BRANCH }}

      - name: Linters
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.59.0
          working-directory: ${{ env.BRANCH }}
        env:
          GO111MODULE: "on"
        run: |
          golangci-lint run -v --config ./.golangci.yml --issues-exit-code 0 --print-issued-lines=true

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: onlinestore_test
          POSTGRES_USER: manager
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U manager"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Extract branch name
        run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19

      - name: Check out code
        uses: actions/checkout@v3

      - name: Download dependencies
        run: |
          go mod tidy
          go mod download
        working-directory: ${{ env.BRANCH }}

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h postgres -p 5432 -U manager; do
            echo "Waiting for PostgreSQL...";
            sleep 2;
          done

      - name: Run unit tests
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          POSTGRES_DB: onlinestore_test
          POSTGRES_USER: manager
          POSTGRES_PASSWORD: password
        run: go test -v -count=10 -race -timeout=1m ./...
        working-directory: ${{ env.BRANCH }}
